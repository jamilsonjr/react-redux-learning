{"ast":null,"code":"var _jsxFileName = \"/Users/jjr05/Documents/learning/redux/react-redux-tutorial/src/js/components/Form.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addArticle: article => dispatch(addArticle(article))\n  };\n}\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlewSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    // console.log(event)\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      title\n    } = this.state;\n    console.log(\"before dispatch\");\n    console.log(this.state);\n    this.props.addArticle({\n      title\n    });\n    this.setState({\n      title: \"\"\n    });\n    console.log(\"After dispatch\");\n    console.log(this.state);\n  }\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\nexport default Form;","map":{"version":3,"names":["React","Component","connect","addArticle","mapDispatchToProps","dispatch","article","ConnectedForm","constructor","props","state","title","handleChange","bind","handlewSubmit","handleSubmit","event","setState","target","id","value","preventDefault","console","log","render","Form"],"sources":["/Users/jjr05/Documents/learning/redux/react-redux-tutorial/src/js/components/Form.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { addArticle } from \"../actions/index\"\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addArticle: article => dispatch(addArticle(article))\n    }\n}\n\nclass ConnectedForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            title: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handlewSubmit = this.handleSubmit.bind(this)\n    }\n    handleChange(event) {\n        // console.log(event)\n        this.setState({ [event.target.id]: event.target.value });\n      }    \n    handleSubmit(event){\n        event.preventDefault()\n        const { title } = this.state\n        console.log(\"before dispatch\")\n        console.log(this.state)\n        this.props.addArticle({ title })\n        this.setState({ title: \"\" })\n        console.log(\"After dispatch\")\n        console.log(this.state)\n    }\n    render(){\n        const { title } = this.state\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"title\">Title</label>\n                    <input \n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">SAVE</button>\n            </form>\n        )\n    }\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm)\nexport default Form"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAAA;AAE7C,SAASC,kBAAkB,CAACC,QAAQ,EAAE;EAClC,OAAO;IACHF,UAAU,EAAEG,OAAO,IAAID,QAAQ,CAACF,UAAU,CAACG,OAAO,CAAC;EACvD,CAAC;AACL;AAEA,MAAMC,aAAa,SAASN,SAAS,CAAC;EAClCO,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;IACD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,YAAY,CAACF,IAAI,CAAC,IAAI,CAAC;EACrD;EACAD,YAAY,CAACI,KAAK,EAAE;IAChB;IACA,IAAI,CAACC,QAAQ,CAAC;MAAE,CAACD,KAAK,CAACE,MAAM,CAACC,EAAE,GAAGH,KAAK,CAACE,MAAM,CAACE;IAAM,CAAC,CAAC;EAC1D;EACFL,YAAY,CAACC,KAAK,EAAC;IACfA,KAAK,CAACK,cAAc,EAAE;IACtB,MAAM;MAAEV;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5BY,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,KAAK,CAAC;IACvB,IAAI,CAACD,KAAK,CAACN,UAAU,CAAC;MAAEQ;IAAM,CAAC,CAAC;IAChC,IAAI,CAACM,QAAQ,CAAC;MAAEN,KAAK,EAAE;IAAG,CAAC,CAAC;IAC5BW,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,KAAK,CAAC;EAC3B;EACAc,MAAM,GAAE;IACJ,MAAM;MAAEb;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,oBACI;MAAM,QAAQ,EAAE,IAAI,CAACK,YAAa;MAAA,wBAC9B;QAAA,wBACI;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpC;UACI,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,OAAO;UACV,KAAK,EAAEJ,KAAM;UACb,QAAQ,EAAE,IAAI,CAACC;QAAa;UAAA;UAAA;UAAA;QAAA,QAC9B;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAEf;AACJ;AAEA,MAAMa,IAAI,GAAGvB,OAAO,CAAC,IAAI,EAAEE,kBAAkB,CAAC,CAACG,aAAa,CAAC;AAC7D,eAAekB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}